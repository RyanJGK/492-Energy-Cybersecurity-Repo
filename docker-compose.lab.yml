version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports: ["2181:2181"]

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    depends_on: [zookeeper]
    ports: ["9092:9092"]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: ics_security
    ports: ["5432:5432"]
    volumes:
      - ./sql:/docker-entrypoint-initdb.d

  schema-registry:
    image: confluentinc/cp-schema-registry:7.7.1
    depends_on: [kafka]
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    ports: ["8081:8081"]

  email-verification-agent:
    build: .
    environment:
      KAFKA_BROKERS: kafka:9092
      CONFIG_FILE: /app/config.yaml
    depends_on: [kafka]

  ot-collector:
    build: .
    environment:
      KAFKA_BROKERS: kafka:9092
      PCAP_PATH: /pcaps/sample_modbus.pcap
    volumes:
      - ./pcaps:/pcaps
    depends_on: [kafka]

  ot-tracking-consumer:
    build: .
    environment:
      KAFKA_BROKERS: kafka:9092
      ZONES_FILE: /app/config/zones.yaml
    depends_on: [kafka]
